{"ast":null,"code":"import{Button,createTheme,Grid,ThemeProvider,Typography,Box,TextField}from'@material-ui/core';import useMediaQuery from'@material-ui/core/useMediaQuery';import{useMemo,useState}from'react';// Define the shape of the manga and chapter data\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function App(){const prefersDarkMode=useMediaQuery('(prefers-color-scheme: dark)');const[searchQuery,setSearchQuery]=useState('');// Input for manga search\nconst[mangaResults,setMangaResults]=useState([]);// List of manga search results\nconst[selectedManga,setSelectedManga]=useState(null);// Selected manga URL\nconst[chapterInfo,setChapterInfo]=useState([]);// Fetched chapter info\nconst[error,setError]=useState(null);// Handle manga search\nconst handleSearch=()=>{if(searchQuery){fetch(\"http://localhost:8000/search\",{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({mangaName:searchQuery})}).then(res=>res.json()).then(data=>{setMangaResults(data.results||[]);// Assuming the backend returns an array of search results\nsetError(null);}).catch(err=>{console.error(\"Error searching for manga:\",err);setError(\"Failed to search for manga.\");});}};// Handle manga selection and chapter scraping\nconst handleMangaSelection=url=>{setSelectedManga(url);fetch(\"http://localhost:8000/message\",{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({mangaUrl:url})// Send the selected manga URL to scrape chapters\n}).then(res=>res.json()).then(data=>setChapterInfo(data.message||[])).catch(err=>{console.error(\"Error fetching chapters:\",err);setError(\"Failed to fetch chapters.\");});};// Theme setup for dark and light modes\nconst theme=useMemo(()=>createTheme({palette:{type:prefersDarkMode?'dark':'light'},typography:{h1:{fontSize:16,fontWeight:400},body1:{fontFamily:'monospace',fontSize:18}}}),[prefersDarkMode]);return/*#__PURE__*/_jsx(ThemeProvider,{theme:theme,children:/*#__PURE__*/_jsx(Box,{component:\"main\",padding:2,display:\"flex\",children:/*#__PURE__*/_jsxs(Grid,{container:true,direction:\"column\",justifyContent:\"center\",alignItems:\"center\",spacing:2,children:[/*#__PURE__*/_jsx(Grid,{item:true,children:/*#__PURE__*/_jsx(Typography,{variant:\"h1\",children:\"Manga Search\"})}),/*#__PURE__*/_jsxs(Grid,{item:true,children:[/*#__PURE__*/_jsx(TextField,{multiline:true,inputProps:{style:{color:\"black\"}},label:\"Search Manga\",variant:\"outlined\",value:searchQuery,onChange:e=>setSearchQuery(e.target.value)}),/*#__PURE__*/_jsx(Button,{onClick:handleSearch,variant:\"contained\",color:\"primary\",style:{marginTop:'10px'},children:\"Search\"})]}),/*#__PURE__*/_jsx(Grid,{item:true,children:mangaResults.length>0?/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Typography,{variant:\"h2\",children:\"Search Results:\"}),mangaResults.map((manga,index)=>/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(Typography,{variant:\"body1\",children:[/*#__PURE__*/_jsx(\"img\",{src:manga.title}),/*#__PURE__*/_jsx(Button,{onClick:()=>handleMangaSelection(manga.url),variant:\"contained\",color:\"secondary\",style:{marginLeft:'10px'},children:\"Select\"})]})},index))]}):/*#__PURE__*/_jsx(Typography,{variant:\"body1\",children:\"No manga found\"})}),/*#__PURE__*/_jsx(Grid,{item:true,children:selectedManga&&chapterInfo.length>0?/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Typography,{variant:\"h2\",children:\"Chapters:\"}),chapterInfo.map((chapter,index)=>/*#__PURE__*/_jsxs(Typography,{variant:\"body1\",children:[chapter.chapterInfo,\" - \",/*#__PURE__*/_jsx(\"a\",{href:`https://mangafire.to${chapter.chapterLink}`,target:\"_blank\",rel:\"noopener noreferrer\",children:\"Read\"})]},index))]}):selectedManga?/*#__PURE__*/_jsx(Typography,{variant:\"body1\",children:\"No chapters found for the selected manga\"}):null}),error&&/*#__PURE__*/_jsx(Grid,{item:true,children:/*#__PURE__*/_jsx(Typography,{color:\"error\",children:error})})]})})});}export default App;","map":{"version":3,"names":["Button","createTheme","Grid","ThemeProvider","Typography","Box","TextField","useMediaQuery","useMemo","useState","jsx","_jsx","jsxs","_jsxs","App","prefersDarkMode","searchQuery","setSearchQuery","mangaResults","setMangaResults","selectedManga","setSelectedManga","chapterInfo","setChapterInfo","error","setError","handleSearch","fetch","method","headers","body","JSON","stringify","mangaName","then","res","json","data","results","catch","err","console","handleMangaSelection","url","mangaUrl","message","theme","palette","type","typography","h1","fontSize","fontWeight","body1","fontFamily","children","component","padding","display","container","direction","justifyContent","alignItems","spacing","item","variant","multiline","inputProps","style","color","label","value","onChange","e","target","onClick","marginTop","length","map","manga","index","src","title","marginLeft","chapter","href","chapterLink","rel"],"sources":["C:/Users/Iliya/Desktop/Projects/React-Chapter-Updater/chapupdater-extension/src/App.tsx"],"sourcesContent":["import { Button, createTheme, Grid, ThemeProvider, Typography, Box, TextField } from '@material-ui/core';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { useMemo, useState, useEffect } from 'react';\n\n// Define the shape of the manga and chapter data\ninterface Manga {\n  title: string;\n  url: string;\n}\n\ninterface Chapter {\n  chapterInfo: string;\n  chapterLink: string;\n}\n\nfunction App() {\n  const prefersDarkMode = useMediaQuery('(prefers-color-scheme: dark)');\n  const [searchQuery, setSearchQuery] = useState<string>(''); // Input for manga search\n  const [mangaResults, setMangaResults] = useState<Manga[]>([]); // List of manga search results\n  const [selectedManga, setSelectedManga] = useState<string | null>(null); // Selected manga URL\n  const [chapterInfo, setChapterInfo] = useState<Chapter[]>([]); // Fetched chapter info\n  const [error, setError] = useState<string | null>(null);\n\n  // Handle manga search\n  const handleSearch = () => {\n    if (searchQuery) {\n      fetch(\"http://localhost:8000/search\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({ mangaName: searchQuery }),\n      })\n        .then((res) => res.json())\n        .then((data) => {\n          setMangaResults(data.results || []); // Assuming the backend returns an array of search results\n          setError(null);\n        })\n        .catch((err) => {\n          console.error(\"Error searching for manga:\", err);\n          setError(\"Failed to search for manga.\");\n        });\n    }\n  };\n\n  // Handle manga selection and chapter scraping\n  const handleMangaSelection = (url: string) => {\n    setSelectedManga(url);\n    fetch(\"http://localhost:8000/message\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ mangaUrl: url }), // Send the selected manga URL to scrape chapters\n    })\n      .then((res) => res.json())\n      .then((data) => setChapterInfo(data.message || []))\n      .catch((err) => {\n        console.error(\"Error fetching chapters:\", err);\n        setError(\"Failed to fetch chapters.\");\n      });\n  };\n\n  // Theme setup for dark and light modes\n  const theme = useMemo(\n    () =>\n      createTheme({\n        palette: {\n          type: prefersDarkMode ? 'dark' : 'light',\n        },\n        typography: {\n          h1: {\n            fontSize: 16,\n            fontWeight: 400,\n          },\n          body1: {\n            fontFamily: 'monospace',\n            fontSize: 18,\n          },\n        },\n      }),\n    [prefersDarkMode]\n  );\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Box component='main' padding={2} display='flex'>\n        <Grid container direction='column' justifyContent='center' alignItems='center' spacing={2}>\n          <Grid item>\n            <Typography variant='h1'>Manga Search</Typography>\n          </Grid>\n\n          <Grid item>\n            <TextField\n            multiline inputProps={{ style: { color: \"black\" } }}\n              label=\"Search Manga\"\n              variant=\"outlined\"\n              value={searchQuery}\n              onChange={(e) => setSearchQuery(e.target.value)}\n            />\n            <Button onClick={handleSearch} variant=\"contained\" color=\"primary\" style={{ marginTop: '10px' }}>\n              Search\n            </Button>\n          </Grid>\n\n          {/* Show manga search results */}\n          <Grid item>\n            {mangaResults.length > 0 ? (\n              <div>\n                <Typography variant='h2'>Search Results:</Typography>\n                {mangaResults.map((manga, index) => (\n                  <div key={index}>\n                    <Typography variant='body1'>\n                      <img src = {manga.title}></img>\n                      <Button onClick={() => handleMangaSelection(manga.url)} variant='contained' color='secondary' style={{ marginLeft: '10px' }}>\n                        Select\n                      </Button>\n                    </Typography>\n                  </div>\n                ))}\n              </div>\n            ) : (\n              <Typography variant='body1'>No manga found</Typography>\n            )}\n          </Grid>\n\n          {/* Show selected manga's chapter information */}\n          <Grid item>\n            {selectedManga && chapterInfo.length > 0 ? (\n              <div>\n                <Typography variant='h2'>Chapters:</Typography>\n                {chapterInfo.map((chapter, index) => (\n                  <Typography key={index} variant='body1'>\n                    {chapter.chapterInfo} - <a href={`https://mangafire.to${chapter.chapterLink}`} target=\"_blank\" rel=\"noopener noreferrer\">Read</a>\n                  </Typography>\n                ))}\n              </div>\n            ) : selectedManga ? (\n              <Typography variant='body1'>No chapters found for the selected manga</Typography>\n            ) : null}\n          </Grid>\n\n          {/* Show error if any */}\n          {error && (\n            <Grid item>\n              <Typography color=\"error\">{error}</Typography>\n            </Grid>\n          )}\n        </Grid>\n      </Box>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}