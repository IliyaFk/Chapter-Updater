{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Iliya\\\\Desktop\\\\Projects\\\\React-Chapter-Updater\\\\chapupdater-extension\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport { createMuiTheme, Grid, ThemeProvider, Typography, Box } from '@material-ui/core';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { useMemo, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const prefersDarkMode = useMediaQuery('(prefers-color-scheme: dark)');\n  const [message, setMessage] = useState([]);\n  useEffect(() => {\n    fetch(\"http://localhost:8000/message\").then(res => res.json()).then(data => setMessage(data.message || [])).catch(err => console.error(\"Error fetching message:\", err));\n  }, []);\n  const theme = useMemo(() => createMuiTheme({\n    palette: {\n      type: prefersDarkMode ? 'dark' : 'light' // Use 'type' for Material-UI v4\n    },\n    typography: {\n      h1: {\n        fontSize: 16,\n        fontWeight: 400\n      },\n      body1: {\n        fontFamily: 'monospace',\n        fontSize: 18\n      }\n    }\n  }), [prefersDarkMode]);\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: theme,\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      component: \"main\",\n      padding: 2,\n      display: \"flex\",\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        direction: \"column\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        spacing: 2,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h1\",\n            children: \"Fetched Data\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: message.length > 0 ? /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body1\",\n            children: message[0].chapterInfo\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body1\",\n            children: \"No data available\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"6tLRqZmNcBZEojYC3+Wh/H1myng=\", false, function () {\n  return [useMediaQuery];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["createMuiTheme","Grid","ThemeProvider","Typography","Box","useMediaQuery","useMemo","useState","useEffect","jsxDEV","_jsxDEV","App","_s","prefersDarkMode","message","setMessage","fetch","then","res","json","data","catch","err","console","error","theme","palette","type","typography","h1","fontSize","fontWeight","body1","fontFamily","children","component","padding","display","container","direction","justifyContent","alignItems","spacing","item","variant","fileName","_jsxFileName","lineNumber","columnNumber","length","chapterInfo","_c","$RefreshReg$"],"sources":["C:/Users/Iliya/Desktop/Projects/React-Chapter-Updater/chapupdater-extension/src/App.tsx"],"sourcesContent":["import { Button, createMuiTheme, Grid, ThemeProvider, Typography, Box } from '@material-ui/core';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { useMemo, useState, useEffect } from 'react';\n\nfunction App() {\n  const prefersDarkMode = useMediaQuery('(prefers-color-scheme: dark)');\n\n  const [message, setMessage] = useState([]);\n\n  useEffect(() => {\n    fetch(\"http://localhost:8000/message\")\n      .then((res) => res.json())\n      .then((data) => setMessage(data.message || []))\n      .catch(err => console.error(\"Error fetching message:\", err));\n  }, []);\n\n  const theme = useMemo(\n    () =>\n      createMuiTheme({\n        palette: {\n          type: prefersDarkMode ? 'dark' : 'light', // Use 'type' for Material-UI v4\n        },\n        typography: {\n          h1: {\n            fontSize: 16,\n            fontWeight: 400,\n          },\n          body1: {\n            fontFamily: 'monospace',\n            fontSize: 18,\n          },\n        },\n      }),\n    [prefersDarkMode]\n  );\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Box component='main' padding={2} display='flex'>\n        <Grid container direction='column' justifyContent='center' alignItems='center' spacing={2}>\n          <Grid item>\n            <Typography variant='h1'>Fetched Data</Typography>\n          </Grid>\n\n          <Grid item>\n            {message.length > 0 ? (\n              <Typography variant='body1'>{message[0].chapterInfo}</Typography>\n            ) : (\n              <Typography variant='body1'>No data available</Typography>\n            )}\n          </Grid>\n        </Grid>\n      </Box>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}