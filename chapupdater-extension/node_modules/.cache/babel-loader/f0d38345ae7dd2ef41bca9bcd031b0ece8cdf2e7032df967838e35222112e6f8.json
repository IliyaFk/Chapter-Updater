{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Iliya\\\\Desktop\\\\Projects\\\\React-Chapter-Updater\\\\chapupdater-extension\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport { createMuiTheme } from '@material-ui/core';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { useMemo, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const prefersDarkMode = useMediaQuery('(prefers-color-scheme: dark)');\n  const [message, setMessage] = useState(\"\");\n  useEffect(() => {\n    fetch(\"http://localhost:8000/message\").then(res => res.json()).then(data => setMessage(data.message));\n  }, []);\n  const theme = useMemo(() => createMuiTheme({\n    palette: {\n      type: prefersDarkMode ? 'dark' : 'light'\n    },\n    typography: {\n      h1: {\n        fontSize: 16,\n        fontWeight: 400\n      },\n      body1: {\n        fontFamily: 'monospace',\n        fontSize: 18\n      }\n    }\n  }), [prefersDarkMode]);\n  return (\n    /*#__PURE__*/\n    // <ThemeProvider theme={theme}>\n    //   <CssBaseline />\n    //   <Box component='main' padding={2} display='flex'>\n    //     <Grid container direction='column' justify='center' alignItems='center' spacing={2}>\n    //       <Grid item>\n    //         <Typography variant='h1'>UUID Generator</Typography>\n    //       </Grid>\n    //       <Grid item>\n    //         <Typography variant='body1' style={{ userSelect: 'all' }}>\n    //           {uuid}\n    //         </Typography>\n    //       </Grid>\n    _jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: message[0]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }, this)\n\n    /* <Grid item>\n      <Button onClick={generateUuid} variant='contained' color='primary'>\n        Generate new UUID\n      </Button>\n    </Grid>\n    </Grid>\n    </Box>\n    </ThemeProvider> */\n  );\n}\n_s(App, \"mIuOFiflgL6Qd1bc/+bW2oEyHl8=\", false, function () {\n  return [useMediaQuery];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["createMuiTheme","useMediaQuery","useMemo","useState","useEffect","jsxDEV","_jsxDEV","App","_s","prefersDarkMode","message","setMessage","fetch","then","res","json","data","theme","palette","type","typography","h1","fontSize","fontWeight","body1","fontFamily","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Iliya/Desktop/Projects/React-Chapter-Updater/chapupdater-extension/src/App.tsx"],"sourcesContent":["import { Button, createMuiTheme, Grid, ThemeProvider, Typography, Box } from '@material-ui/core';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { useMemo, useState, useEffect } from 'react';\n\nfunction App() {\n  const prefersDarkMode = useMediaQuery('(prefers-color-scheme: dark)');\n\n  const [message, setMessage] = useState(\"\");\n\n  useEffect(() => {\n    fetch(\"http://localhost:8000/message\")\n      .then((res) => res.json())\n      .then((data) => setMessage(data.message));\n  }, []);\n\n  const theme = useMemo(\n    () =>\n      createMuiTheme({\n        palette: {\n          type: prefersDarkMode ? 'dark' : 'light',\n        },\n        typography: {\n          h1: {\n            fontSize: 16,\n            fontWeight: 400,\n          },\n          body1: {\n            fontFamily: 'monospace',\n            fontSize: 18,\n          },\n        },\n      }),\n    [prefersDarkMode]\n  );\n\n\n  return (\n    // <ThemeProvider theme={theme}>\n    //   <CssBaseline />\n    //   <Box component='main' padding={2} display='flex'>\n    //     <Grid container direction='column' justify='center' alignItems='center' spacing={2}>\n    //       <Grid item>\n    //         <Typography variant='h1'>UUID Generator</Typography>\n    //       </Grid>\n\n    //       <Grid item>\n    //         <Typography variant='body1' style={{ userSelect: 'all' }}>\n    //           {uuid}\n    //         </Typography>\n    //       </Grid>\n\n          <div className=\"App\">\n            <h1>{message[0]}</h1>\n          </div>\n          \n          /* <Grid item>\n            <Button onClick={generateUuid} variant='contained' color='primary'>\n              Generate new UUID\n            </Button>\n          </Grid>\n        </Grid>\n      </Box>\n    </ThemeProvider> */\n  );\n}\n\nexport default App;"],"mappings":";;AAAA,SAAiBA,cAAc,QAA8C,mBAAmB;AAChG,OAAOC,aAAa,MAAM,iCAAiC;AAC3D,SAASC,OAAO,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErD,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAMC,eAAe,GAAGR,aAAa,CAAC,8BAA8B,CAAC;EAErE,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAE1CC,SAAS,CAAC,MAAM;IACdQ,KAAK,CAAC,+BAA+B,CAAC,CACnCC,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACzBF,IAAI,CAAEG,IAAI,IAAKL,UAAU,CAACK,IAAI,CAACN,OAAO,CAAC,CAAC;EAC7C,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMO,KAAK,GAAGf,OAAO,CACnB,MACEF,cAAc,CAAC;IACbkB,OAAO,EAAE;MACPC,IAAI,EAAEV,eAAe,GAAG,MAAM,GAAG;IACnC,CAAC;IACDW,UAAU,EAAE;MACVC,EAAE,EAAE;QACFC,QAAQ,EAAE,EAAE;QACZC,UAAU,EAAE;MACd,CAAC;MACDC,KAAK,EAAE;QACLC,UAAU,EAAE,WAAW;QACvBH,QAAQ,EAAE;MACZ;IACF;EACF,CAAC,CAAC,EACJ,CAACb,eAAe,CAClB,CAAC;EAGD;IAAA;IACE;IACA;IACA;IACA;IACA;IACA;IACA;IAEA;IACA;IACA;IACA;IACA;IAEMH,OAAA;MAAKoB,SAAS,EAAC,KAAK;MAAAC,QAAA,eAClBrB,OAAA;QAAAqB,QAAA,EAAKjB,OAAO,CAAC,CAAC;MAAC;QAAAkB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClB;;IAEL;AACV;AACA;AACA;AACA;AACA;AACA;AACA;EAPU;AASV;AAACvB,EAAA,CA5DQD,GAAG;EAAA,QACcN,aAAa;AAAA;AAAA+B,EAAA,GAD9BzB,GAAG;AA8DZ,eAAeA,GAAG;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}