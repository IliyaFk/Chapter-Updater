{"ast":null,"code":"import{createMuiTheme}from'@material-ui/core';import useMediaQuery from'@material-ui/core/useMediaQuery';import{useMemo,useState,useEffect}from'react';import{v4 as uuidv4}from'uuid';import{jsx as _jsx}from\"react/jsx-runtime\";function App(){const prefersDarkMode=useMediaQuery('(prefers-color-scheme: dark)');const[uuid,setUuid]=useState('00000000-0000-0000-0000-000000000000');const[message,setMessage]=useState(\"\");useEffect(()=>{fetch(\"http://localhost:8000/message\").then(res=>res.json()).then(data=>setMessage(data.message));},[]);const theme=useMemo(()=>createMuiTheme({palette:{type:prefersDarkMode?'dark':'light'},typography:{h1:{fontSize:16,fontWeight:400},body1:{fontFamily:'monospace',fontSize:18}}}),[prefersDarkMode]);const generateUuid=()=>{setUuid(uuidv4());};return/*#__PURE__*/(// <ThemeProvider theme={theme}>\n//   <CssBaseline />\n//   <Box component='main' padding={2} display='flex'>\n//     <Grid container direction='column' justify='center' alignItems='center' spacing={2}>\n//       <Grid item>\n//         <Typography variant='h1'>UUID Generator</Typography>\n//       </Grid>\n//       <Grid item>\n//         <Typography variant='body1' style={{ userSelect: 'all' }}>\n//           {uuid}\n//         </Typography>\n//       </Grid>\n_jsx(\"div\",{className:\"App\",children:/*#__PURE__*/_jsx(\"h1\",{children:message})})/* <Grid item>\n            <Button onClick={generateUuid} variant='contained' color='primary'>\n              Generate new UUID\n            </Button>\n          </Grid>\n        </Grid>\n      </Box>\n    </ThemeProvider> */);}export default App;","map":{"version":3,"names":["createMuiTheme","useMediaQuery","useMemo","useState","useEffect","v4","uuidv4","jsx","_jsx","App","prefersDarkMode","uuid","setUuid","message","setMessage","fetch","then","res","json","data","theme","palette","type","typography","h1","fontSize","fontWeight","body1","fontFamily","generateUuid","className","children"],"sources":["C:/Users/Iliya/Desktop/Projects/React-Chapter-Updater/chapupdater-extension/src/App.tsx"],"sourcesContent":["import { Button, createMuiTheme, Grid, ThemeProvider, Typography, Box } from '@material-ui/core';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { useMemo, useState, useEffect } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\n\nfunction App() {\n  const prefersDarkMode = useMediaQuery('(prefers-color-scheme: dark)');\n\n  const [uuid, setUuid] = useState('00000000-0000-0000-0000-000000000000');\n  const [message, setMessage] = useState(\"\");\n\n  useEffect(() => {\n    fetch(\"http://localhost:8000/message\")\n      .then((res) => res.json())\n      .then((data) => setMessage(data.message));\n  }, []);\n\n  const theme = useMemo(\n    () =>\n      createMuiTheme({\n        palette: {\n          type: prefersDarkMode ? 'dark' : 'light',\n        },\n        typography: {\n          h1: {\n            fontSize: 16,\n            fontWeight: 400,\n          },\n          body1: {\n            fontFamily: 'monospace',\n            fontSize: 18,\n          },\n        },\n      }),\n    [prefersDarkMode]\n  );\n\n  const generateUuid = () => {\n    setUuid(uuidv4());\n  };\n\n  return (\n    // <ThemeProvider theme={theme}>\n    //   <CssBaseline />\n    //   <Box component='main' padding={2} display='flex'>\n    //     <Grid container direction='column' justify='center' alignItems='center' spacing={2}>\n    //       <Grid item>\n    //         <Typography variant='h1'>UUID Generator</Typography>\n    //       </Grid>\n\n    //       <Grid item>\n    //         <Typography variant='body1' style={{ userSelect: 'all' }}>\n    //           {uuid}\n    //         </Typography>\n    //       </Grid>\n\n          <div className=\"App\">\n            <h1>{message}</h1>\n          </div>\n          \n          /* <Grid item>\n            <Button onClick={generateUuid} variant='contained' color='primary'>\n              Generate new UUID\n            </Button>\n          </Grid>\n        </Grid>\n      </Box>\n    </ThemeProvider> */\n  );\n}\n\nexport default App;"],"mappings":"AAAA,OAAiBA,cAAc,KAA8C,mBAAmB,CAChG,MAAO,CAAAC,aAAa,KAAM,iCAAiC,CAE3D,OAASC,OAAO,CAAEC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CACpD,OAASC,EAAE,GAAI,CAAAC,MAAM,KAAQ,MAAM,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAEpC,QAAS,CAAAC,GAAGA,CAAA,CAAG,CACb,KAAM,CAAAC,eAAe,CAAGT,aAAa,CAAC,8BAA8B,CAAC,CAErE,KAAM,CAACU,IAAI,CAAEC,OAAO,CAAC,CAAGT,QAAQ,CAAC,sCAAsC,CAAC,CACxE,KAAM,CAACU,OAAO,CAAEC,UAAU,CAAC,CAAGX,QAAQ,CAAC,EAAE,CAAC,CAE1CC,SAAS,CAAC,IAAM,CACdW,KAAK,CAAC,+BAA+B,CAAC,CACnCC,IAAI,CAAEC,GAAG,EAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACzBF,IAAI,CAAEG,IAAI,EAAKL,UAAU,CAACK,IAAI,CAACN,OAAO,CAAC,CAAC,CAC7C,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAO,KAAK,CAAGlB,OAAO,CACnB,IACEF,cAAc,CAAC,CACbqB,OAAO,CAAE,CACPC,IAAI,CAAEZ,eAAe,CAAG,MAAM,CAAG,OACnC,CAAC,CACDa,UAAU,CAAE,CACVC,EAAE,CAAE,CACFC,QAAQ,CAAE,EAAE,CACZC,UAAU,CAAE,GACd,CAAC,CACDC,KAAK,CAAE,CACLC,UAAU,CAAE,WAAW,CACvBH,QAAQ,CAAE,EACZ,CACF,CACF,CAAC,CAAC,CACJ,CAACf,eAAe,CAClB,CAAC,CAED,KAAM,CAAAmB,YAAY,CAAGA,CAAA,GAAM,CACzBjB,OAAO,CAACN,MAAM,CAAC,CAAC,CAAC,CACnB,CAAC,CAED,mBACE;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEME,IAAA,QAAKsB,SAAS,CAAC,KAAK,CAAAC,QAAA,cAClBvB,IAAA,OAAAuB,QAAA,CAAKlB,OAAO,CAAK,CAAC,CACf,CAEL;AACV;AACA;AACA;AACA;AACA;AACA;AACA,uBAPU,EASV,CAEA,cAAe,CAAAJ,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}