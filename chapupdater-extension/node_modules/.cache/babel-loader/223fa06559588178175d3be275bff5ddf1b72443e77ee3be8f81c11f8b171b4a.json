{"ast":null,"code":"import{Button,createTheme,Grid,ThemeProvider,Typography,Box,TextField}from'@material-ui/core';import useMediaQuery from'@material-ui/core/useMediaQuery';import{useMemo,useState}from'react';// Define the shape of the message array elements\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function App(){const prefersDarkMode=useMediaQuery('(prefers-color-scheme: dark)');// State to hold user input and fetched data\nconst[mangaName,setMangaName]=useState('');const[message,setMessage]=useState([]);const handleSubmit=event=>{event.preventDefault();// Prevent default form submission\n// Fetch data from the backend using the user input (mangaName)\nfetch(`http://localhost:8000/message`,{method:'POST',// Assuming your backend is set to accept POST requests\nheaders:{'Content-Type':'application/json'},body:JSON.stringify({mangaName})// Send mangaName to the backend\n}).then(res=>res.json()).then(data=>setMessage(data.message||[]))// Ensure data is an array\n.catch(err=>console.error(\"Error fetching message:\",err));};const theme=useMemo(()=>createTheme({palette:{type:prefersDarkMode?'dark':'light'},typography:{h1:{fontSize:16,fontWeight:400},body1:{fontFamily:'monospace',fontSize:18}}}),[prefersDarkMode]);return/*#__PURE__*/_jsx(ThemeProvider,{theme:theme,children:/*#__PURE__*/_jsx(Box,{component:\"main\",padding:2,display:\"flex\",children:/*#__PURE__*/_jsxs(Grid,{container:true,direction:\"column\",justifyContent:\"center\",alignItems:\"center\",spacing:2,children:[/*#__PURE__*/_jsx(Grid,{item:true,children:/*#__PURE__*/_jsx(Typography,{variant:\"h1\",children:\"Manga Chapters Fetcher\"})}),/*#__PURE__*/_jsx(Grid,{item:true,children:/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(TextField,{sx:{input:{color:'red'}},label:\"Enter Manga Name\",variant:\"outlined\",value:mangaName,onChange:e=>setMangaName(e.target.value)// Update state as user types\n,required:true}),/*#__PURE__*/_jsx(Button,{type:\"submit\",variant:\"contained\",color:\"primary\",children:\"Fetch Chapters\"})]})}),/*#__PURE__*/_jsx(Grid,{item:true,children:message.length>0?message.map((chapter,index)=>/*#__PURE__*/_jsxs(Typography,{variant:\"body1\",children:[chapter.chapterInfo,\" - \",/*#__PURE__*/_jsx(\"a\",{href:`https://mangafire.to${chapter.chapterLink}`,target:\"_blank\",rel:\"noopener noreferrer\",children:\"Read\"})]},index)):/*#__PURE__*/_jsx(Typography,{variant:\"body1\",children:\"No data available\"})})]})})});}export default App;","map":{"version":3,"names":["Button","createTheme","Grid","ThemeProvider","Typography","Box","TextField","useMediaQuery","useMemo","useState","jsx","_jsx","jsxs","_jsxs","App","prefersDarkMode","mangaName","setMangaName","message","setMessage","handleSubmit","event","preventDefault","fetch","method","headers","body","JSON","stringify","then","res","json","data","catch","err","console","error","theme","palette","type","typography","h1","fontSize","fontWeight","body1","fontFamily","children","component","padding","display","container","direction","justifyContent","alignItems","spacing","item","variant","onSubmit","sx","input","color","label","value","onChange","e","target","required","length","map","chapter","index","chapterInfo","href","chapterLink","rel"],"sources":["C:/Users/Iliya/Desktop/Projects/React-Chapter-Updater/chapupdater-extension/src/App.tsx"],"sourcesContent":["import { Button, createTheme, Grid, ThemeProvider, Typography, Box, TextField } from '@material-ui/core';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { useMemo, useState, useEffect } from 'react';\n\n// Define the shape of the message array elements\ninterface Chapter {\n  chapterInfo: string;\n  chapterLink: string;\n}\n\nfunction App() {\n  const prefersDarkMode = useMediaQuery('(prefers-color-scheme: dark)');\n\n  // State to hold user input and fetched data\n  const [mangaName, setMangaName] = useState<string>('');\n  const [message, setMessage] = useState<Chapter[]>([]);\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault(); // Prevent default form submission\n\n    // Fetch data from the backend using the user input (mangaName)\n    fetch(`http://localhost:8000/message`, {\n      method: 'POST', // Assuming your backend is set to accept POST requests\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ mangaName }), // Send mangaName to the backend\n    })\n      .then((res) => res.json())\n      .then((data) => setMessage(data.message || [])) // Ensure data is an array\n      .catch((err) => console.error(\"Error fetching message:\", err));\n  };\n\n  const theme = useMemo(\n    () =>\n      createTheme({\n        palette: {\n          type: prefersDarkMode ? 'dark' : 'light',\n        },\n        typography: {\n          h1: {\n            fontSize: 16,\n            fontWeight: 400,\n          },\n          body1: {\n            fontFamily: 'monospace',\n            fontSize: 18,\n          },\n        },\n      }),\n    [prefersDarkMode]\n  );\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Box component='main' padding={2} display='flex'>\n        <Grid container direction='column' justifyContent='center' alignItems='center' spacing={2}>\n          <Grid item>\n            <Typography variant='h1'>Manga Chapters Fetcher</Typography>\n          </Grid>\n\n          {/* Form to get user input */}\n          <Grid item>\n            <form onSubmit={handleSubmit}>\n              <TextField\n                sx={{ input: { color: 'red' } }}\n                label=\"Enter Manga Name\"\n                variant=\"outlined\"\n                value={mangaName}\n                onChange={(e) => setMangaName(e.target.value)} // Update state as user types\n                required\n              />\n              <Button type=\"submit\" variant=\"contained\" color=\"primary\">\n                Fetch Chapters\n              </Button>\n            </form>\n          </Grid>\n\n          {/* Display fetched data */}\n          <Grid item>\n            {message.length > 0 ? (\n              message.map((chapter, index) => (\n                <Typography key={index} variant='body1'>\n                  {chapter.chapterInfo} - <a href={`https://mangafire.to${chapter.chapterLink}`} target=\"_blank\" rel=\"noopener noreferrer\">Read</a>\n                </Typography>\n              ))\n            ) : (\n              <Typography variant='body1'>No data available</Typography>\n            )}\n          </Grid>\n        </Grid>\n      </Box>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}